---
import Layout from "../layouts/Layout.astro";
---

<Layout title="SVG Generator">
  <main class="min-h-screen p-6 flex flex-col gap-6 items-center bg-base-200">
     
    <div class="flex w-full max-w-5xl items-center justify-between">
      <h1 class="text-3xl font-bold text-primary">Générateur de SVG</h1>
      <a href="/" class="btn btn-secondary">← Retour</a>
        <div class="breadcrumbs text-sm mb-2"> 
         <ul> 
          <li><a href="/" class="text-primary">Accueil</a></li> 
          <li class="text-secondary">Générateur de SVG</li>
         </ul> 
        </div>
    </div>
    <!-- Grid 2 colonnes -->
    <div class="grid grid-cols-1 md:grid-cols-2 gap-6 w-full max-w-5xl">
      <!-- 1. Prompt input -->
      <div class="card bg-base-100 shadow-xl p-4 flex flex-col gap-4">
        <textarea
          id="user-prompt"
          class="textarea textarea-bordered textarea-lg w-full"
          placeholder="Décris le SVG que tu veux (ex: a red car)"
        ></textarea>
        <button
          id="generate-button"
          class="btn btn-secondary"
        >
          Générer le SVG
        </button>
        <div class="flex gap-2">
          <input 
            id="svg-name" 
            type="text" 
            placeholder="Nom du SVG" 
            class="input input-bordered input-sm w-full"
          />
          <button id="save-svg" class="btn btn-accent">Enregistrer</button>
          <a href="/saved" class="btn btn-outline btn-info">Voir mes SVG enregistrés</a>

        </div>
      </div>

      <!-- 2. Code généré -->
      <div class="card bg-base-100 shadow-xl p-4">
        <h2 class="font-semibold text-primary">Code SVG :</h2>
        <pre id="svg-output" class="whitespace-pre-wrap text-sm text-secondary"></pre>
      </div>
    </div>

    <!-- 3. Aperçu SVG -->
    <div class="card bg-base-100 shadow-xl p-4 w-full max-w-5xl">
      <h2 class="font-semibold text-primary">Aperçu :</h2>
      <div id="svg-container" class="flex justify-center items-center min-h-[200px]"></div>
    </div>
  </main>

  <script>
    //@ts-nocheck

    async function generateSVG(prompt) {
      const res = await fetch('/api/generateSVG', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ prompt }),
      });
      const data = await res.json();
      return data.svg;
    }

    async function handleSubmit() {
      const promptElement = document.getElementById("user-prompt");
      const generateButton = document.getElementById("generate-button");
      const svgOutput = document.getElementById("svg-output");
      const svgContainer = document.getElementById("svg-container");

      const prompt = promptElement.value.trim();
      if (!prompt) return;

      // Spinner et désactivation du bouton
      svgContainer.innerHTML = `<span class="loading loading-ring loading-xl"></span>`;
      generateButton.disabled = true;

      try {
        const svgCode = await generateSVG(prompt);
        console.log("SVG généré:", svgCode);

        svgOutput.textContent = svgCode;
        svgContainer.innerHTML = svgCode;
      } catch (err) {
        console.error("Erreur génération SVG:", err);
        svgContainer.textContent = "Erreur lors de la génération du SVG.";
      } finally {
        generateButton.disabled = false;
      }
    }

    const generateButton = document.getElementById("generate-button");
    if (generateButton) {
      generateButton.addEventListener("click", handleSubmit);
    }

    // Sauvegarde vers PocketBase via l'API Astro
    const saveButton = document.getElementById('save-svg');
    const svgNameInput = document.getElementById('svg-name');
    const svgOutput = document.getElementById('svg-output');

    if (saveButton) {
      saveButton.addEventListener('click', async () => {
        const name = svgNameInput.value.trim();
        const code = svgOutput.textContent.trim();

        if (!name || !code) {
          alert('Veuillez générer un SVG et donner un nom.');
          return;
        }

        try {
          const res = await fetch('/api/saveSVG', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ name, code }),
          });

          if (!res.ok) throw new Error('Erreur lors de l\'enregistrement');

          const record = await res.json();
          alert(`SVG "${record.name}" enregistré avec succès !`);
          svgNameInput.value = '';
        } catch (err) {
          console.error(err);
          alert(err.message);
        }
      });
    }
  </script>
</Layout>
